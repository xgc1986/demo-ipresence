name: Demo builder

on:
  push:
    branches: [ master ]

jobs:

  start:
    name: Build and test
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[DEPLOY]')"

  build-php:
    needs: [start]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: PHP CS
        run: vendor/bin/phpcs src

      - name: PHPSTAN
        run: vendor/bin/phpstan analyse src --level=8

      - name: PHPUNIT
        run: vendor/bin/phpunit

  build-js:
    needs: [start]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        # if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: cd src-js && yarn install

      - name: Build source code
        run: cd src-js && yarn webpack -c webpack.config.prod.js

      - name: add compiled files
        uses: EndBug/add-and-commit@v4
        with:
          add: public/js
          force: true
          message: "[DEPLOY] version XXX"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

